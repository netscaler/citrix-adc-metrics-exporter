apiVersion: v1
kind: Pod
metadata:
  name: netscaler-exporter-be
  namespace: kube-system
  labels:
    app: netscaler-exporter-be
spec:
  containers:
    - name: netscaler-exporter-be
      image: ghcr.io/thg-ice/netscaler-exporter:v0.0.4 
      args:
        - "--target-nsip=10.10.127.126"
        - "--port=8888"
        - "--metric=lbvserver"
        - "--metric=csvserver"
        - "--log-level=DEBUG"
        - "--vlb-prefix-filter=autoice.{5}-(prod|nonprod)"
        - "--vcs-prefix-filter=autoice.{5}-(prod|nonprod)"
      imagePullPolicy: Always
      volumeMounts:
      - name: nslogin
        mountPath: "/mnt/nslogin"
        readOnly: true
      securityContext:
        readOnlyRootFilesystem: true
  volumes:
  - name: nslogin
    secret:
      secretName: nslogin
---
apiVersion: v1
kind: Service
metadata:
  name: netscaler-exporter-be
  namespace: kube-system
  labels:
    app: netscaler-exporter-be
spec:
  type: ClusterIP
  ports:
  - port: 8888
    targetPort: 8888
    name: exporter-port
  selector:
    app: netscaler-exporter-be
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: netscaler-exporter-be
    prometheus: prometheus
  name: netscaler-exporter-be
  namespace: monitoring
spec:
  endpoints:
  - interval: 1m
    port: http
  namespaceSelector:
    matchNames:
    - kube-system
  selector:
    matchLabels:
      app: netscaler-exporter-be
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-prometheus-to-netscaler-exporter
  namespace: monitoring
specs:
- endpointSelector:
    matchLabels: 
      app: netscaler-exporter-be
  ingress:
  - fromEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: monitoring
        prometheus: prometheus-agent
    toPorts:
    - ports:
      - port: "8888"
        protocol: TCP
      rules:
        http:
        - method: GET
          path: /metrics
